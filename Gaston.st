Object subclass: #Dinero	instanceVariableNames: 'pesos centavos'	classVariableNames: ''	poolDictionaries: ''	category: 'Gaston'!!Dinero methodsFor: 'arithmetic' stamp: 'GastonBarrios 11/12/2018 20:19'!+ unDinero"metodo que suma dos dineros"| totPesos totCentavos| ( unDinero isKindOf: Dinero) ifTrue:[ totPesos:= self pesos + unDinero pesos.	                                    totCentavos:= self centavos + unDinero centavos.	                                    ^Dinero pesos: totPesos centavos: totCentavos ]                               ifFalse:[^self error: 'Dinero ilegitimo'].! !!Dinero methodsFor: 'printing' stamp: 'GastonBarrios 11/11/2018 14:45'!printOn:unaVentana"me imprime con el formato $432,51 o -$4322,51"self pesos <0 ifTrue:[unaVentana nextPut:$-].unaVentana nextPut:$$.self pesos abs printOn: unaVentana.unaVentana nextPut:$,.self centavos <=9 ifTrue:[unaVentana nextPut:$0].self centavos printOn: unaVentana.! !!Dinero methodsFor: 'accesing' stamp: 'GastonBarrios 11/11/2018 13:40'!pesos"getter de la variable de instancia pesos"^pesos! !!Dinero methodsFor: 'accesing' stamp: 'GastonBarrios 11/11/2018 13:37'!centavos	"getter de la variable de instancia centavos"^centavos! !!Dinero methodsFor: 'accesing' stamp: 'GastonBarrios 11/11/2018 13:40'!pesos:unValor"setter de la variable de instancia pesos"pesos:=unValor.! !!Dinero methodsFor: 'accesing' stamp: 'GastonBarrios 11/11/2018 13:39'!centavos:unValor"setter de la variable de instancia centavos"centavos:=unValor.! !!Dinero methodsFor: 'accesing' stamp: 'GastonBarrios 11/11/2018 23:11'!pesos:unValor centavos:otroValor"es un metodo que funciona de setter para ambos variables de instancias a la vez"| totalCentavos pesosNecesarios centavosNecesarios |"pesos:=unValor.centavos:=otroValor."self sonNumeros ifFalse:[^self error:'valores ingresados deben ser numeros'].totalCentavos:= unValor * 100 + otroValor.pesosNecesarios:= totalCentavos abs//100.centavosNecesarios:= totalCentavos abs\\100.totalCentavos <8 ifTrue:[pesosNecesarios:= pesosNecesarios negated].pesos:= pesosNecesarios.centavos:= centavosNecesarios.^self! !!Dinero methodsFor: 'private' stamp: 'GastonBarrios 11/11/2018 22:58'!sonNumeros	"metodo privado encargado de validar que las variables de instancia de pesos y centavos sean numeros" self pesos isInteger & self centavos isInteger ifTrue:[^true]                                                ifFalse:[^false]! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Dinero class	instanceVariableNames: ''!!Dinero class methodsFor: 'accesing' stamp: 'GastonBarrios 11/11/2018 23:39'!pesos:unValor centavos:otroValor	"metodo de clase que funcione de setter para ambas variables de instancias a la vez"| totalCentavos pesosNecesarios centavosNecesarios dinero |(unValor isInteger & otroValor isInteger ) ifFalse:[^self error:'no son numeros'].dinero:=Dinero new.totalCentavos := unValor *100+ otroValor.pesosNecesarios:= totalCentavos abs//100.centavosNecesarios:= totalCentavos abs\\100.totalCentavos <0 ifTrue:[pesosNecesarios:= pesosNecesarios negated].dinero pesos: pesosNecesarios; centavos: centavosNecesarios.^dinero	! !!Dinero class methodsFor: 'arithmetic' stamp: 'GastonBarrios 11/12/2018 08:22'!+ unDinero"metodo que suma dos dineros"| totPesos totCentavos| ( unDinero isKindOf: Dinero) ifTrue:[ totPesos:= self pesos + unDinero pesos.	                                    totCentavos:= self centavos + unDinero centavos.	                                    ^Dinero pesos: totPesos centavos: totCentavos ]                               ifFalse:[^self error: 'Dinero ilegitimo'].! !Object subclass: #Larga	instanceVariableNames: 'coso nose'	classVariableNames: ''	poolDictionaries: ''	category: 'Gaston'!!Larga methodsFor: 'accesing' stamp: 'GastonBarrios 11/16/2018 11:19'!masLarga:unaquem| quem nose2  medir coso2|quem:=unaquem substrings.medir:=0."nose2:=0."1 to:(quem  size) do:[:i|	(((quem at:i) size) > medir) ifTrue:[		medir:=((quem at:i) size).		coso2:= (quem at:i). 		]			 ].^coso2! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Larga class	instanceVariableNames: ''!!Larga class methodsFor: 'accesing' stamp: 'GastonBarrios 11/16/2018 11:41'!masLarga:unaquem| cansado quem   medir coso2|cansado:= Larga new.quem:=unaquem substrings.medir:=0."nose2:=0."1 to:(quem  size) do:[:i|	(((quem at:i) size) > medir) ifTrue:[		medir:=((quem at:i) size).		coso2:= (quem at:i). 		]			 ].cansado masLarga:coso2.^cansado! !!Larga class methodsFor: 'accesing' stamp: 'GastonBarrios 11/16/2018 12:09'!miren:unaquem| cansado quem   medir coso2|cansado:= Larga new.quem:=unaquem substrings.medir:=0."nose2:=0."1 to:(quem  size) do:[:i|	(((quem at:i) size) > medir) ifTrue:[		medir:=((quem at:i) size).		coso2:= (quem at:i). 		]			 ].cansado miren:coso2.^cansado ! !Object subclass: #Longitudes	instanceVariableNames: 'palabra ingreso'	classVariableNames: ''	poolDictionaries: ''	category: 'Gaston'!!Longitudes methodsFor: 'accesing' stamp: 'GastonBarrios 11/16/2018 03:13'!medirPalabras:oracion	|nose coso medir coso2|"coso:=Longitudes new."medir:= oracion substrings."medir substrings.""unaPalabra substrings."coso2:=OrderedCollection new.1 to:(medir  size) do:[:i|nose:=((medir at:i)size). coso2 add:(i asString). coso2 add:','. coso2 add:nose asString . coso2 add:'.'. ]."coso medirPalabras:coso2."^coso2! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Longitudes class	instanceVariableNames: ''!!Longitudes class methodsFor: 'accesing' stamp: 'GastonBarrios 11/16/2018 03:05'!medirPalabras:unaquem| quem nose coso medir coso2|coso:=Longitudes new.quem:=unaquem substrings."quem substrings.""medir:= oracion.medir substrings.""unaPalabra substrings."coso2:=OrderedCollection new.1 to:(quem  size) do:[:i|nose:=((quem at:i)size). coso2 add:(i asString). coso2 add:','. coso2 add:nose asString . coso2 add:'.'. ].^coso2! !Object subclass: #Palabras	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Gaston'!Object subclass: #Primos	instanceVariableNames: 'vector'	classVariableNames: ''	poolDictionaries: ''	category: 'Gaston'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Primos class	instanceVariableNames: ''!!Primos class methodsFor: 'accesing' stamp: 'GastonBarrios 11/15/2018 23:15'!devolverVector	"setter de la devolucion de un vector"| sum divi nose vector1|nose:=Primos new.vector1:=OrderedCollection new. 2 to: 200 do:[:i|sum:=0. 1 to: i do:[:j| divi:=(i \\ j ). (divi=0) ifTrue:[sum:=sum+1]. ]. (sum=2 )ifTrue:[ vector1 add: i ]. ].^vector1"nose devolverVector:vector1.^nose"  ! !!Primos class methodsFor: 'accesing' stamp: 'GastonBarrios 11/15/2018 23:14'!devolverVector:unValor	"setter de la devolucion de un vector"| sum divi nose vector1|nose:=Primos new.vector1:=OrderedCollection new. 2 to: 200 do:[:i|sum:=0. 1 to: i do:[:j| divi:=(i \\ j ). (divi=0) ifTrue:[sum:=sum+1]. ]. (sum=2 )ifTrue:[ vector1 add: i ]. ].nose devolverVector:vector1.^nose  ! !Object subclass: #Rectangulo	instanceVariableNames: 'base altura perimetro coso'	classVariableNames: ''	poolDictionaries: ''	category: 'Gaston'!!Rectangulo methodsFor: 'accesing' stamp: 'GastonBarrios 11/7/2018 11:57'!+calcularPerimetro	"getter de variable de instancia perimetro"	^perimetro ! !!Rectangulo methodsFor: 'accesing' stamp: 'GastonBarrios 11/7/2018 13:21'!calcularPerimetro:unPerimetro	"setter de variable de instancia perimetro"	"perimetro:=unPerimetro."			perimetro:=unPerimetro.	coso:=(perimetro *3). 			! !!Rectangulo methodsFor: 'accesing' stamp: 'GastonBarrios 10/31/2018 16:04'!base:unaBase	"getter de variable de instancia base"base:=unaBase.! !!Rectangulo methodsFor: 'accesing' stamp: 'GastonBarrios 11/7/2018 13:19'!calcularPerimetro	"getter de variable de instancia perimetro"	^coso! !!Rectangulo methodsFor: 'accesing' stamp: 'GastonBarrios 10/31/2018 20:20'!altura:unaAltura	"setter de la variable de instancia altura"altura:=unaAltura.! !!Rectangulo methodsFor: 'accesing' stamp: 'GastonBarrios 10/31/2018 16:03'!base	"getter de variable de instancia base "^base! !!Rectangulo methodsFor: 'accesing' stamp: 'GastonBarrios 10/31/2018 20:19'!altura"getter de la variable de instancia altura"^altura! !Object subclass: #RectanguloClases	instanceVariableNames: ''	classVariableNames: 'coso ingreso perimetro'	poolDictionaries: ''	category: 'Gaston'!!RectanguloClases methodsFor: 'accesing' stamp: 'GastonBarrios 11/11/2018 13:35'!calcularPerimetro:unPerimetro	"setter de variable de instancia perimetro"	"perimetro:=unPerimetro."			perimetro:=unPerimetro.	coso:=(perimetro *3). ! !!RectanguloClases methodsFor: 'accesing' stamp: 'GastonBarrios 11/8/2018 11:40'!coso^coso! !