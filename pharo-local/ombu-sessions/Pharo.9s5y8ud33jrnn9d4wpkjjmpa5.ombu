OmEntry {	#tags : {		#author : 'GastonBarrios',		#time : DateAndTime [ '2018-11-11T22:46:06.132329-03:00' ],		#prior : OmReference [ 'Pharo.1yd7kat0lhl064e2pfenb7f6h', '16' ],		#self : OmReference [ '1' ]	},	#content : EpProtocolAddition {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Dinero\r\tinstanceVariableNames: \'pesos centavos\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Gaston\''			},			#name : #Dinero,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Dinero,						#isMetaSide : false					},					#name : #pesos,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Dinero,						#isMetaSide : false					},					#name : #centavos,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Dinero class\r\tinstanceVariableNames: \'\''				},				#name : #'Dinero class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Dinero,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Gaston,			#package : #Gaston,			#sharedPools : OrderedCollection [ ]		},		#protocol : #private	}}OmEntry {	#tags : {		#author : 'GastonBarrios',		#time : DateAndTime [ '2018-11-11T22:58:48.431335-03:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Dinero,				#isMetaSide : false			},			#name : #sonNumeros,			#protocol : #private,			#sourceCode : 'sonNumeros\r\t"metodo privado encargado de validar que las variables de instancia de pesos y centavos sean numeros"\r self pesos isInteger & self centavos isInteger ifTrue:[^true]\r                                                ifFalse:[^false]\r',			#stamp : 'GastonBarrios 11/11/2018 22:58',			#package : #Gaston		}	}}OmEntry {	#tags : {		#author : 'GastonBarrios',		#time : DateAndTime [ '2018-11-11T23:11:11.045322-03:00' ],		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Dinero,				#isMetaSide : false			},			#name : #'pesos:centavos:',			#protocol : #accesing,			#sourceCode : 'pesos:unValor centavos:otroValor\r"es un metodo que funciona de setter para ambos variables de instancias a la vez"\r| totalCentavos pesosNecesarios centavosNecesarios |\r"pesos:=unValor.\rcentavos:=otroValor."\rtotalCentavos:= unValor * 100 + otroValor.\rpesosNecesarios:= totalCentavos abs//100.\rcentavosNecesarios:= totalCentavos abs\\\\100.\rtotalCentavos <8 ifTrue:[pesosNecesarios:= pesosNecesarios negated].\rpesos:= pesosNecesarios.\rcentavos:= centavosNecesarios.\r^self\r',			#stamp : 'GastonBarrios 11/11/2018 15:53',			#package : #Gaston		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Dinero,				#isMetaSide : false			},			#name : #'pesos:centavos:',			#protocol : #accesing,			#sourceCode : 'pesos:unValor centavos:otroValor\r"es un metodo que funciona de setter para ambos variables de instancias a la vez"\r| totalCentavos pesosNecesarios centavosNecesarios |\r"pesos:=unValor.\rcentavos:=otroValor."\rself sonNumeros ifFalse:[^self error:\'valores ingresados deben ser numeros\'].\rtotalCentavos:= unValor * 100 + otroValor.\rpesosNecesarios:= totalCentavos abs//100.\rcentavosNecesarios:= totalCentavos abs\\\\100.\rtotalCentavos <8 ifTrue:[pesosNecesarios:= pesosNecesarios negated].\rpesos:= pesosNecesarios.\rcentavos:= centavosNecesarios.\r^self\r',			#stamp : 'GastonBarrios 11/11/2018 23:11',			#package : #Gaston		}	}}OmEntry {	#tags : {		#author : 'GastonBarrios',		#time : DateAndTime [ '2018-11-11T23:32:32.404736-03:00' ],		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ]	},	#content : EpProtocolAddition {		#behavior : RGMetaclassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'Dinero class\r\tinstanceVariableNames: \'\''			},			#name : #'Dinero class',			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#baseClass : RGClassDefinition {				#annotations : IdentityDictionary {					#superclassName : 'Object',					#traitCompositionSource : '{}',					#definitionSource : 'Object subclass: #Dinero\r\tinstanceVariableNames: \'pesos centavos\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Gaston\''				},				#name : #Dinero,				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #Dinero,							#isMetaSide : false						},						#name : #pesos,						#parent : @12					},					RGInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #Dinero,							#isMetaSide : false						},						#name : #centavos,						#parent : @12					}				],				#metaClass : @7,				#comment : RGCommentDefinition {					#annotations : IdentityDictionary {						#className : #Dinero,						#isMetaSide : false					},					#parent : @12,					#content : ''				},				#classVariables : OrderedCollection [ ],				#category : #Gaston,				#package : #Gaston,				#sharedPools : OrderedCollection [ ]			}		},		#protocol : #accesing	}}OmEntry {	#tags : {		#author : 'GastonBarrios',		#time : DateAndTime [ '2018-11-11T23:39:54.389317-03:00' ],		#prior : OmReference [ '4' ],		#self : OmReference [ '5' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Dinero class',				#isMetaSide : true			},			#name : #'pesos:centavos:',			#protocol : #accesing,			#sourceCode : 'pesos:unValor centavos:otroValor\r\t"metodo de clase que funcione de setter para ambas variables de instancias a la vez"\r| totalCentavos pesosNecesarios centavosNecesarios dinero |\r(unValor isInteger & otroValor isInteger ) ifFalse:[^self error:\'no son numeros\'].\rdinero:=Dinero new.\rtotalCentavos := unValor *100+ otroValor.\rpesosNecesarios:= totalCentavos abs//100.\rcentavosNecesarios:= totalCentavos abs\\\\100.\rtotalCentavos <0 ifTrue:[pesosNecesarios:= pesosNecesarios negated].\rdinero pesos: pesosNecesarios; centavos: centavosNecesarios.\r^dinero\t',			#stamp : 'GastonBarrios 11/11/2018 23:39',			#package : #Gaston		}	}}